{"createdAt":"2025-08-18T20:30:24.756Z","updatedAt":"2025-08-24T10:26:52.351Z","id":"oP2letsYnhS4eRo4","name":"Backup - SaveToDrive","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{"triggerAtHour":22,"triggerAtMinute":5}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-220,0],"id":"bb5b1044-42bc-4ddb-ad9a-eadd6e4dc184","name":"Schedule Trigger"},{"parameters":{"url":"=https://n8n-test-u33729.vm.elestio.app/api/v1/workflows","authentication":"predefinedCredentialType","nodeCredentialType":"n8nApi","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,0],"id":"45681c5b-4670-436e-8ec7-a226a8e7fd3b","name":"Get Workflows","credentials":{"n8nApi":{"id":"y0hXcQUgBwCBJXLF","name":"n8n account"}}},{"parameters":{"jsCode":"return items.map((item, index) => {\n  const workflow = $('Get Last Modified').all()[index].json || {};\n  const tags = workflow.tags || [];\n  const category = tags.find(tag => ['Personal', 'Niklas', 'FWS', 'School', 'Commune', 'Shipping'].includes(tag.name))?.name || 'Uncategorized';\n  const type = tags.find(tag => ['Testing', 'Prototype', 'Final', 'Sub-Flow'].includes(tag.name))?.name || 'Unknown';\n  const safeCategory = category.replace(/[^a-zA-Z0-9-]/g, '-');\n  const workflowName = workflow.name || 'Unknown-Workflow';\n  return {\n    json: {\n      workflow: workflow,\n      filename: `Backups n8n/${safeCategory}/${type}/Backup_${workflowName}_${new Date().toISOString().slice(0,10)}.json`\n    }\n  };\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[660,0],"id":"9d6b7c80-9b0a-4dc4-b639-83c082d53300","name":"Create JSON Objects"},{"parameters":{"jsCode":"return items.map(item => ({\n  json: {\n    filename: item.json.filename\n  },\n  binary: {\n    data: {\n      data: Buffer.from(JSON.stringify(item.json.workflow)).toString('base64'),\n      mimeType: 'application/json'\n    }\n  }\n}));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[880,0],"id":"c0ba2979-1825-43fc-b259-ad7dcedf84a5","name":"Convert To Binary"},{"parameters":{"inputDataFieldName":"=data","name":"={{ $json.filename.split('/').pop() }}","driveId":{"__rl":true,"value":"My Drive","mode":"list","cachedResultName":"My Drive","cachedResultUrl":"https://drive.google.com/drive/my-drive"},"folderId":{"__rl":true,"value":"={{ $json.folderId }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1320,0],"id":"70b7f530-1da0-4c9d-aa0b-4001b4488f4b","name":"Upload To Drive","credentials":{"googleDriveOAuth2Api":{"id":"2oafYBwxhXZgywPy","name":"Google Drive Levin"}}},{"parameters":{"fromEmail":"denny@redel-aisolutions.com","toEmail":"levin@redel-aisolutions.com","subject":"Backup Status","html":"=<h3>n8n Backup Status</h3>\n<p><strong>Erfolgreich:</strong> {{ $input.all().length }} Workflows gesichert.</p>\n<p><strong>Datum:</strong> {{ new Date().toISOString().slice(0, 10) }}</p>","options":{"appendAttribution":false}},"type":"n8n-nodes-base.emailSend","typeVersion":2.1,"position":[1540,0],"id":"fe966c8a-c6e3-4efb-9c35-decb72c74d3c","name":"Send Email","webhookId":"5989bcf9-ba2f-4ad5-b449-fed1d59799d0","executeOnce":true,"credentials":{"smtp":{"id":"CYZNGyn17Upg6wQ8","name":"SMTP account Denny"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"2de9b43f-9fce-4237-b13e-24ce6b94a9f4","leftValue":"={{ $('Get Last Modified').first().json }}","rightValue":"","operator":{"type":"object","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[440,0],"id":"73120183-e052-47d2-abf4-815762db4496","name":"If"},{"parameters":{"fromEmail":"denny@redel-aisolutions.com","toEmail":"levin@redel-aisolutions.com","subject":"Backup Status","html":"=<h3>n8n Backup Status</h3>\n<p><strong>Status:</strong> Kein Backup durchgeführt: Es wurden keine neuen oder geänderten Workflows gefunden.</p>\n<p><strong>Datum:</strong> {{ new Date().toISOString().slice(0, 10) }}</p>","options":{"appendAttribution":false}},"type":"n8n-nodes-base.emailSend","typeVersion":2.1,"position":[660,200],"id":"18507ed8-d09c-4e76-a310-5d2866c2f068","name":"Send Email 2","webhookId":"5989bcf9-ba2f-4ad5-b449-fed1d59799d0","executeOnce":true,"credentials":{"smtp":{"id":"CYZNGyn17Upg6wQ8","name":"SMTP account Denny"}}},{"parameters":{"jsCode":"const folderMap = {\n  'FWS/Testing': '1H4vgc_6fh7SEp2705-Tmi4JNeih7uG69',\n  'FWS/Prototype': '1YWK1i2CTk1RepB6TWbX3wvbQ8SWyyALd',\n  'FWS/Final': '1wbI2AXtmcfauPZ1-9STuiL6po-LXreJS',\n  'FWS/Sub-Flow': '1wTvv6Z2GgtQOkpSP0q7uo0Wivpd7EbPT',\n  'Niklas/Testing': '18ZZqmy6VTBl4vtQnWZPOok8dobQyRjeb',\n  'Niklas/Prototype': '1A73MMzuIrbo5K8ubfqVl5cabzKVJ3Xvp',\n  'Niklas/Final': '1bZ3zFKttocIh25Nff7l8g1xi-13ys4AL',\n  'Niklas/Sub-Flow': '16yOnuN-eA-ILIgkLCvQbh5uMSonj2AAn',\n  'Personal/Testing': '15ogLXeWMiCwlIpHvF_fm5yvdsey6jmpl',\n  'Personal/Prototype': '1_FSizN8-Cuwr59KFtrdrvwXpsXtLjcdR',\n  'Personal/Final': '1RKFgXqqgyRuD11MoLJcJvOXE6dbrga9D',\n  'Personal/Sub-Flow': '1FvpX6EgWouBB0CWgagivUN-595fguIEZ',\n  'School-Uni/Testing': '1HVLPhGlR27R0jFX7Ssx2verdvTSm1coE',\n  'School-Uni/Prototype': '1W-Ol0aCv-bZ95k0Q99mOulD4HMqym_CI',\n  'School-Uni/Final': '1cVEgxp_WX4lDXz_GYLXkdXFGMVVIVAST',\n  'School-Uni/Sub-Flow': '1W3xn4cAYW6o3ps_V66J2lGBGDK7g-Nt_',\n  'Commune/Testing': '1tBNwbS0DkuQWXRYsq0SdFQ-1gRNgeoLt',\n  'Commune/Prototype': '1hxyVrRgxgVPONQw3oAhUpp31h-nXbptn',\n  'Commune/Final': '16erbUorvPfpEkL-IyQ5ag0eMiwD8JvfW',\n  'Commune/Sub-Flow': '1-sY7RGCANKNeWhT8XqHKs0SbTlVqPofR',\n  'Shipping/Testing': '1Vcip0r58FrnZ858mayRlZvo-cC_Z_5rb',\n  'Shipping/Prototype': '1aDmcGVIvxbYKG-fv-IR5BAibAhrJ2wvl',\n  'Shipping/Final': '1lbzF7vANsSW4pr0fYHiNmif1C8pV_-F1',\n  'Shipping/Sub-Flow': '1SvhNgzyeGHjRUh0y60dt4V0gwBk5i2Nz',\n  'Fallback': '19QxlwB9iLW5WLEJB4zchPuK_DDXHX7kz'\n};\n\nreturn items.map(item => {\n  const workflow = item.json;\n  let path = workflow.filename.split('/').slice(1, -1).join('/');\n  let folderId = folderMap[path] || folderMap['Fallback'];\n\n  // Wenn path nicht in folderMap (außer Fallback), setze Fallback-Pfad\n  if (!folderMap[path] && path !== 'Fallback') {\n    path = 'Fallback';\n    folderId = folderMap['Fallback'];\n    workflow.filename = `Backups n8n/Fallback/Backup_${workflow.filename.split('/').pop().replace(/^Backup_/, '').replace(/_2025-04-17\\.json$/, '')}_2025-04-17.json`;\n  }\n\n  console.log('Path:', path, 'Folder ID:', folderId, 'Filename:', workflow.filename);\n  return {\n    json: {\n      ...workflow,\n      folderId\n    },\n    binary: item.binary\n  };\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1100,0],"id":"398f2552-c526-4c7e-bd03-843f84ba18e7","name":"Set Folder ID"},{"parameters":{"jsCode":"const yesterday = new Date();\nyesterday.setDate(yesterday.getDate() - 1); // Einen Tag zurück\nconst dateStr = yesterday.toISOString().slice(0, 10); // z. B. \"2025-04-15\"\nconsole.log(`Filtering for: ${dateStr}`);\nconst workflows = items[0].json.data || [];\nconsole.log('Workflows found:', workflows.length);\nworkflows.forEach(w => console.log(`Name: ${w.name}, updatedAt: ${w.updatedAt}, tags: ${JSON.stringify(w.tags)}`));\nconst filtered = workflows\n  .filter(workflow => workflow.updatedAt && workflow.updatedAt.startsWith(dateStr))\n  .map(workflow => ({ json: workflow }));\nconsole.log(`Filtered workflows: ${filtered.length}`);\nreturn filtered;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[220,0],"id":"2c9e690d-3d04-4586-88d6-6f69ba3fd6ac","name":"Get Last Modified","alwaysOutputData":true}],"connections":{"Schedule Trigger":{"main":[[{"node":"Get Workflows","type":"main","index":0}]]},"Get Workflows":{"main":[[{"node":"Get Last Modified","type":"main","index":0}]]},"Create JSON Objects":{"main":[[{"node":"Convert To Binary","type":"main","index":0}]]},"Convert To Binary":{"main":[[{"node":"Set Folder ID","type":"main","index":0}]]},"Upload To Drive":{"main":[[{"node":"Send Email","type":"main","index":0}]]},"If":{"main":[[{"node":"Create JSON Objects","type":"main","index":0}],[{"node":"Send Email 2","type":"main","index":0}]]},"Set Folder ID":{"main":[[{"node":"Upload To Drive","type":"main","index":0}]]},"Get Last Modified":{"main":[[{"node":"If","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","timezone":"Europe/Berlin","callerPolicy":"workflowsFromSameOwner"},"staticData":null,"meta":{"templateCredsSetupCompleted":true,"instanceId":"ed4f3f37220443d82fec76dc79b331975281d2af5e70e3db9bcbd487ec78ae41"},"pinData":{},"versionId":"203f1fd1-83c2-468e-aa31-a6336efe9a2d","triggerCount":0,"tags":[{"createdAt":"2025-04-16T15:29:17.672Z","updatedAt":"2025-04-16T15:29:17.672Z","id":"idviBckxAZ8HLBc3","name":"Final"},{"createdAt":"2025-04-16T15:25:32.507Z","updatedAt":"2025-04-16T15:25:32.507Z","id":"4D5dq4cSJjnDnu1n","name":"Personal"}],"shared":[{"createdAt":"2025-08-18T20:30:24.756Z","updatedAt":"2025-08-18T20:30:24.756Z","role":"workflow:owner","workflowId":"oP2letsYnhS4eRo4","projectId":"om5T1jDAb8yZPqPE","project":{"createdAt":"2025-08-18T20:30:18.174Z","updatedAt":"2025-08-18T20:33:31.932Z","id":"om5T1jDAb8yZPqPE","name":"Denny Redel <denny.redel@icloud.com>","type":"personal","icon":null,"description":null}}]}